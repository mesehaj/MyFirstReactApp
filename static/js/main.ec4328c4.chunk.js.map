{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","Card","className","Body","Image","src","monster","id","thumbnail","Title","name","Subtitle","email","CardList","mystyle","marginTop","Container","Row","md","style","monsters","map","mx","s","Col","xs","App","state","thought","handleChange","bind","target","this","setState","value","fetch","then","response","json","users","Nav","fill","defaultActiveKey","Item","Link","href","Jumbotron","Form","Group","controlId","Label","Control","type","placeholder","onChange","max","min","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec4328c4.chunk.js","sourcesContent":["import React from 'react';\r\n//import Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nimport './card.Styles.css'\r\n\r\nexport const Cards = props => {\r\n    return <Card className=\"card-container\">\r\n    <Card.Body> \r\n        <Image src={`https://robohash.org/${props.monster.id + 6}?set=set2`} thumbnail/>\r\n        <Card.Title><h2>{props.monster.name}</h2></Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">{props.monster.email}</Card.Subtitle>\r\n    </Card.Body>\r\n</Card>\r\n}","import React from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Cards } from '../card/card.component';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n//import ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\n//import './card-list.Styles.css'\r\n\r\n\r\nexport const CardList = props => {   \r\n  \r\n  const mystyle= {\r\n    marginTop: \"20px\"\r\n  };\r\n    return <Container><Row md={4} style= {mystyle}> { props.monsters.map\r\n      (\r\n        monster => \r\n        (\r\n          cols(monster, mystyle)\r\n        )\r\n      )\r\n   }\r\n   </Row></Container>\r\n}\r\n\r\nfunction cols(mx,s){\r\n    return <Col style= {s} xs={6}><Cards key= {mx.id} monster= {mx}/></Col>\r\n}\r\n\r\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n//import Button from '@material-ui/core/Button';\n//import { render } from '@testing-library/react';\nimport Nav from 'react-bootstrap/Nav';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n//import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport './components/card/card.Styles.css';\n\nclass App extends React.Component {\n  constructor (){\n    super();\n    this.state = {\n      monsters: [],\n      name: 'Dracula',\n      thought: 'I am Here for Your Blood!',\n      id: 22\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  \n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n  render() {\n    return (\n    <div className=\"App bg-warning\">\n    <div>\n        <h1 className=\"text-monospace\">Funky Monster Card WebApp</h1>\n        <Nav fill defaultActiveKey=\"/home\"  className=\"justify-content-left text-uppercase font-weight-bold font-italic text-monospace text-white rounded-circle \">\n          <Nav.Item className=\"border border-success rounded-pill  bg-dark \">\n            <Nav.Link href=\"/home\">Reload Page</Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"border border-danger rounded-pill  bg-dark \">\n            <Nav.Link href=\"https://www.google.com\" target=\"_blank\">Go to google</Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"border border-success rounded-pill  bg-dark \">\n            <Nav.Link href=\"https://github.com/mesehaj/MyFirstReactApp\" target=\"_blank\">Get the Code of this app</Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"border border-danger rounded-pill  bg-dark \">\n            <Nav.Link href=\"https://jsonplaceholder.typicode.com/users\" target=\"_blank\">JSON data of the app</Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"border border-success rounded-pill  bg-dark \">\n            <Nav.Link href=\"https://react-bootstrap.github.io/\" target=\"_blank\">Learn Bs React</Nav.Link>\n          </Nav.Item>\n        </Nav>\n    </div>\n    <br></br>\n    <Jumbotron className=\"w-100 bg-danger d-flex align-items-center\">\n      <h1>Welcome, to Funky Monster Card Maker!</h1>\n        <h3 className=\"text-warning\">\n          Create Your Own Live MonsterCard\n        </h3>\n        <p className=\"w-25 float-left\">\n        <Form><Form.Group controlId=\"formBasicId\">\n        <Form.Label>Enter Your Favourite Number From 1 - 100</Form.Label>\n        <Form.Control type=\"number\" name=\"id\" placeholder=\"Enter Your Favourite Number From 1 - 100\" value={ this.state.id } onChange={ this.handleChange } max=\"100\" min=\"1\"/>\n      </Form.Group>\n        <Form.Group controlId=\"formBasicName\">\n          <Form.Label>Enter your Name</Form.Label>\n          <Form.Control type=\"textarea\" name=\"name\" placeholder=\"Enter Nick Name\" value={ this.state.name } onChange={ this.handleChange }/>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Enter Any Thought</Form.Label>\n          <Form.Control type=\"thought\" name=\"thought\" placeholder=\"Enter Thoughts\" value={ this.state.thought } onChange={ this.handleChange } />\n        </Form.Group>\n      </Form>\n        </p>\n        <p className=\"d-flex justify-content-end \">\n        <Card className=\"card-container w-75\">\n          <Card.Body> \n          <Image src={`https://robohash.org/${this.state.id}?set=set2`} thumbnail/>\n          <Card.Title><h2>{this.state.name}</h2></Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">{this.state.thought}</Card.Subtitle>\n        </Card.Body>\n      </Card>\n      </p>\n    </Jumbotron>\n    <div className=\"\">\n    <h2>Here are few samples:</h2>\n      <CardList monsters= {this.state.monsters}/>\n    </div>\n  </div>\n  );\n}\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}